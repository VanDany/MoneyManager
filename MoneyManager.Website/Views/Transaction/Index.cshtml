@model Models.Client.Data.TransactionAccount

@{
    ViewData["Title"] = "Index";
}

<h1>Transactions</h1>
@{double somme = 0;}
@foreach (var item in Model.transaction)
{
    @if (item.ExpenseOrIncome == true)
    {
        somme -= item.Amount;
    }
    else
    {
        somme += item.Amount;
    }
}
<div class="accounts">
    <div class="select">
        <select onchange="GetByAjax()" name="format" id="format">
            <option selected>Tous les comptes</option>
            @foreach (var item in Model.account)
            {
                <option value="@item.Id">@item.Description</option>
            }
        </select>
    </div>
    <div id="total" class="balance">Montant total : @somme</div>
    <div id="balance" class="balance">Balance : @somme</div>

</div>

<div class="basic-info">
    @*<a asp-controller="Transaction" asp-action="Create" class="btn btn-success"> Nouvelle transaction</a>*@
    <a data-transactWindow-target="#TransactWindows" class="btn btn-success"> Nouvelle transaction</a>
</div>
<div class="transactWindow" id="transactWindow">
    <div class="modal-header">
        <div class="titleTransact">Nouvelle transaction</div>
        <button data-close-button class="close-button">&times;</button>
    </div>
    <div class="modal-body">
        <div class="row">
            <div class="col-md-4">
                <form asp-action="Create">
                    <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                    <div class="form-group" style="display:none;">
                        <label class="control-label">AccountId</label>
                        <input id = "UserAccountId" class="form-control" />
                    </div>
                    <div class="form-group">
                        <label class="control-label">Description</label>
                        <input id="Description" class="form-control" />
                    </div>
                    <div class="form-group form-check">
                        <label class="form-check-label">
                            Dépense ?
                            <input type="checkbox" id="ExpenseOrIncome" />
                        </label>
                    </div>
                    <div class="form-group">
                        <label id="Amount" class="control-label">Montant</label>
                        <input id="Amount" class="form-control" />
                    </div>
                    <div class="form-group">
                        <label class="control-label">Catégorie</label>
                        <select id="Categories" class="form-control">
                        </select>
                    </div>
                    <div class="form-group">
                        <input type="submit" value="Create" class="btn btn-primary" />
                    </div>
                </form>
            </div>
         </div>
     </div>   
</div>

<div id="overlay"></div>
<table id="transact-table">
    <thead>
        <tr>
            <th scope="col">Compte</th>
            <th scope="col">Date</th>
            <th scope="col">Description</th>
            <th scope="col">Catégorie</th>
            <th scope="col">Montant</th>
            <th scope="col"></th>
        </tr>
    </thead>
    <tbody>
        <tr>
            <td class="account" data-label="Compte"></td>
            <td class="date" data-label="Date"></td>
            <td class="description" data-label="Description"></td>
            <td class="category" data-label="Catégorie"></td>
            <td class="amount" data-label="Montant"></td>
            <td class="icons"></td>
        </tr>
    </tbody>
</table>
<script src="https://code.jquery.com/jquery-3.3.1.slim.min.js" integrity="sha384-q8i/X+965DzO0rT7abK41JStQIAqVgRVzpbzo5smXKp4YfRvH+8abtTE1Pi6jizo" crossorigin="anonymous"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.7/umd/popper.min.js" integrity="sha384-UO2eT0CpHqdSJQ6hJty5KVphtPhzWj9WO1clHTMGa3JDZwrnQq4sF86dIHNDz0W1" crossorigin="anonymous"></script>
<script src="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/js/bootstrap.min.js" integrity="sha384-JjSmVgyd0p3pXB1rRibZUAYoIIy6OrQ6VrjIEaFf/nJGzIxFDsf4x0xIM+B07jRM" crossorigin="anonymous"></script>
<script src='~/js/transactions.js'></script>
<script src="~/js/modal.js"></script>
@section scripts{
    <script type="text/javascript">
        window.onload = GetByAjax();
        window.onload = DisplayPopup();
        function DisplayPopup() {
            var millisecondsToWait = 500;
            setTimeout(function () {
                let doc = document.getElementById("transactWindow");
                doc.style.display = "block";
            }, millisecondsToWait);
        }
        function GetByAjax() {
            let option = document.querySelector('#format');
            let button = document.getElementById("newTransaction");
            //button.setAttribute("href", "/Transaction/Create/" + option.value);
            console.log(button);
            $.ajax({
                url: '@Url.Action("GetByAccount")',
                type: "GET",
                data: { id: option.value },
                dataType: "json",
                success: function (response) {
                    $("#transact-table tbody tr").remove();
                    if (response.length === 0) {
                        $("transact-table").append("<tr><td>Transacts not found!</td></tr>");
                    }
                    else {
                        response.forEach(function (Transact) {
                            addTransactIntoTable(Transact.id, Transact.userAccountId, Transact.userAccount, Transact.dateTransact, Transact.description, Transact.categoryId, Transact.name, Transact.amount, Transact.expenseOrIncome);

                        });
                        colorize();
                        updateAmount();
                    }
                },
                failure: function (response) {
                    alert(response);
                }
            });
            function addTransactIntoTable(Id, AccountId, UserAccount, DateTransact, Description, CategoryId, Name, Amount, ExpenseOrIncome) {
                if (ExpenseOrIncome == true) {
                    Amount = "-" + Amount;
                }
                let mytable =
                    '<tr><td data-label="NomCompte">' + UserAccount +
                    '</td><td data-label="Date">' + DateTransact +
                    '</td><td data-label="Description">' + Description +
                    '</td><td data-label="Catégorie">' + Name +
                    '</td><td data-label="Montant" class="amount">' + Amount +
                    '</td><td> <a href="/Transaction/Edit/' + Id + '"><img id="modify" src="img/modify.png" alt="bin-del"></a><a href="/Transaction/Delete/' + Id +
                    '"><img id="bin-delete" src="img/bin-delete.png" alt="bin-del"></a> </td></tr>';
                $('#transact-table').append(mytable);
            }
            function colorize() {
                $('#transact-table').on('click', function () {
                    var amounts = document.getElementsByClassName('amount');
                    console.log(amounts);
                    for (i = 0; i < amounts.length; i++) {
                        if (amounts[i].innerHTML >= 0) {
                            amounts[i].style.color = "green";
                        }
                        else {
                            amounts[i].style.color = "red";
                        }
                    }
                })
            }
            function updateAmount() {
                let result = 0;
                let amounts = document.getElementsByClassName('amount');
                for (i = 0; i < amounts.length; i++) {
                    result += amounts[i];
                }
                /*document.getElementById('#total').innerHTML = result;*/
            }
        }
            $('#transact-table').on('click', function () {
                var amounts = document.getElementsByClassName('amount');
                console.log(amounts);
                for (i = 0; i < amounts.length; i++) {
                    if (amounts[i].innerHTML >= 0) {
                        amounts[i].style.color = "green";
                    }
                    else {
                        amounts[i].style.color = "red";
                    }
                }
            })
function openModal(modal) {
    if (modal == null) return
    modal.classList.add('active');
    overlay.classList.add('active');
    $.ajax({
        url: '@Url.Action("GetCategories")',
        type: "GET",
        dataType: "json",
        success: function (response) {
            var element = document.getElementById("Categories");
            while (element.firstChild) {
                element.removeChild(element.lastChild);
            }
            if (response.length === 0) {
                $("Categories").append("<option>Categories not found!</option>");
            }
            else {
                response.forEach(function (Category) {
                    addCategoryIntoSelect(Category.name, Category.id);
                });
            }
        },
        failure: function (response) {
            alert(response);
        }
    });
    function addCategoryIntoSelect(Name, Id) {
        let option = document.createElement("option");
        option.text = Name;
        option.value = Id;
        var element = document.getElementById("Categories");
        element.appendChild(option);
    }
}
    </script>

}
<link href="~/css/transactions.css" rel="stylesheet" />
<link href="~/css/modal.css" rel="stylesheet" />
